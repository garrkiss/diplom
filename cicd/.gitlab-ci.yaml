stages:
  - build
  - test
  - deploy

variables:
  DOCKER_IMAGE: "garrkiss/test-app"
  DOCKER_REGISTRY: "docker.io"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

build:
  stage: build
  image: docker:24.0.5-dind
  tags:
    - k8s
    - docker
    - test-app
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
    - dockerd-entrypoint.sh &  # Запуск Docker daemon в фоне
    - sleep 20  # Подождать, пока докер стартует
    - docker version
    - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS" $DOCKER_REGISTRY
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHA .
    - docker tag $DOCKER_IMAGE:$CI_COMMIT_SHA $DOCKER_IMAGE:latest
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHA
    - docker push $DOCKER_IMAGE:latest
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(master|develop)$/'
      changes:
        - "**/*"
        - "!**/.gitlab-ci.yml"
      when: always
    - when: never

build_tag:
  stage: build
  image: docker:24.0.5-dind
  tags:
    - k8s
    - docker
    - test-app
  variables:
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2
  script:
  - dockerd-entrypoint.sh &  # Запуск Docker daemon в фоне
  - sleep 30
  - docker version
  - echo "DOCKERHUB_USER=$DOCKERHUB_USER"
  - echo "DOCKER_REGISTRY=$DOCKER_REGISTRY"
  - echo "Checking DOCKERHUB_PASS"
  - docker login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS" $DOCKER_REGISTRY
  - docker build -t $DOCKER_IMAGE:$CI_COMMIT_TAG .
  - docker push $DOCKER_IMAGE:$CI_COMMIT_TAG
  rules:
    - if: '$CI_COMMIT_TAG'
      changes:
        - "**/*"
        - "!**/.gitlab-ci.yml"
      when: always
    - when: never

test:
  stage: test
  image: $DOCKER_IMAGE:$CI_COMMIT_SHA
  tags:
    - k8s
    - test-app
  script:
    - echo "Running tests..."
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^(master|develop)$/'
      changes:
        - "**/*"
        - "!**/.gitlab-ci.yml"
      when: always
    - when: never

deploy:
  stage: deploy
  image: alpine:latest
  tags:
    - k8s
    - deploy
    - test-app
    - production
  before_script:
    - apk add --no-cache openssh-client bash
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $K8S_HOST >> ~/.ssh/known_hosts
  script:
    - echo "Deploying to Kubernetes via SSH..."
    - ssh ubuntu@$K8S_HOST "kubectl set image deployment/test-app-deployment nginx=$DOCKER_IMAGE:$CI_COMMIT_TAG -n test-app"
    - ssh ubuntu@$K8S_HOST "kubectl rollout status deployment/test-app-deployment -n test-app"
  rules:
    - if: '$CI_COMMIT_TAG'
      changes:
        - "**/*"
        - "!**/.gitlab-ci.yml"
      when: always
    - when: never
  environment:
    name: production
    url: http://89.169.151.16  # Замените на IP сервиса